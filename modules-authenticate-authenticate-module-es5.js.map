{"version":3,"sources":["webpack:///src/app/modules/authenticate/authenticate-routing.module.ts","webpack:///src/app/modules/authenticate/authenticate.component.ts","webpack:///src/app/modules/authenticate/authenticate.component.html","webpack:///src/app/modules/authenticate/authenticate.module.ts","webpack:///src/app/modules/authenticate/login/login.component.ts","webpack:///src/app/modules/authenticate/login/login.component.html","webpack:///src/app/shared/services/auth/authentication.service.ts"],"names":["routes","path","component","children","redirectTo","pathMatch","AuthenticateRoutingModule","forChild","imports","exports","AuthenticateComponent","selector","templateUrl","styleUrls","AuthenticateModule","declarations","providers","LoginComponent","authService","router","tokenService","initForm","formGroup","username","required","password","invalid","loginModel","get","value","authenticate","subscribe","result","saveToken","token","navigateByUrl","ACCOUNT","BASE_MODULE","login","AuthenticationService","http","post","AUTHENTICATION","LOGIN"],"mappings":"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","file":"modules-authenticate-authenticate-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {AuthenticateComponent} from \"./authenticate.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticateComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticateRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authenticate',\n  templateUrl: './authenticate.component.html',\n  styleUrls: ['./authenticate.component.scss'],\n})\nexport class AuthenticateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticateComponent } from './authenticate.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule } from \"@angular/router\";\nimport { AuthenticateRoutingModule } from \"./authenticate-routing.module\";\nimport { AuthenticationService } from \"../../shared/services/auth/authentication.service\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { TokenService } from \"../../shared/services/auth/token.service\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n@NgModule({\n  declarations: [AuthenticateComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    AuthenticateRoutingModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  providers: [\n    AuthenticationService,\n    TokenService\n  ]\n})\nexport class AuthenticateModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from \"../../../shared/services/auth/authentication.service\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {LoginModel} from \"../../../shared/models/auth/login.model\";\nimport {TokenService} from \"../../../shared/services/auth/token.service\";\nimport {Router} from \"@angular/router\";\nimport {RouterUrls} from \"../../../shared/constants/RouterUrls\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n\n  constructor(private authService: AuthenticationService,\n              private router: Router,\n              private tokenService: TokenService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.formGroup = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n    })\n  }\n\n  login() {\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const loginModel: LoginModel = {\n      username: this.formGroup.get('username').value,\n      password: this.formGroup.get('password').value,\n    };\n\n    this.authService.authenticate(loginModel).subscribe(result => {\n      this.tokenService.saveToken(result.token);\n      this.router.navigateByUrl('/' + RouterUrls.ACCOUNT.BASE_MODULE);\n    });\n  }\n\n}\n","<div class=\"login-form\">\n  <div class=\"form-wrap\">\n    <div class=\"img\">\n      <img src=\"/assets/images/logo.png\" />\n    </div>\n    <form [formGroup]=\"formGroup\" (submit)=\"login()\">\n      <div class=\"form-input\">\n        <mat-form-field>\n          <mat-label>Email Adresa</mat-label>\n          <input matInput formControlName=\"username\" placeholder=\"Email Adresa\" value=\"Sushi\">\n        </mat-form-field>\n      </div>\n      <div class=\"form-input\">\n        <mat-form-field>\n          <mat-label>Fjalekalimi</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Fjalekalimi\" />\n        </mat-form-field>\n      </div>\n      <div class=\"button\">\n        <button mat-raised-button color=\"primary\">Kycu</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {RequestUrls} from \"../../constants/RequestUrls\";\nimport {LoginModel} from \"../../models/auth/login.model\";\n\n@Injectable()\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient) { }\n\n  authenticate(loginModel: LoginModel) {\n    return this.http.post<any>(RequestUrls.AUTHENTICATION.LOGIN, loginModel);\n  }\n}\n"]}