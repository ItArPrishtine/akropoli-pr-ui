{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///src/app/modules/account/account-management/account-management-routing.module.ts","webpack:///src/app/modules/account/account-management/account-management.module.ts","webpack:///src/app/modules/account/account-management/user-create-update/user-create-update.component.ts","webpack:///src/app/modules/account/account-management/user-create-update/user-create-update.component.html","webpack:///src/app/modules/account/account-management/user-list/user-list.component.ts","webpack:///src/app/modules/account/account-management/user-list/user-list.component.html","webpack:///src/app/shared/models/account/account-user.model.ts","webpack:///src/app/shared/models/account/role.model.ts","webpack:///src/app/shared/services/account/role.service.ts","webpack:///src/app/shared/services/account/user.service.ts"],"names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","CanStick","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CDK_TABLE","TextColumnOptions","TEXT_COLUMN_OPTIONS","CellDef","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵdir","type","selectors","ctorParameters","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","undefined","decorators","propDecorators","providers","BaseCdkCell","columnDef","elementRef","columnClassName","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","host","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","decls","vars","consts","CdkHeaderRow_Template","directives","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","hasDirection","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","clear","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","context","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","unsubscribe","_dataSource","dataStream","connect","isArray","pipe","subscribe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","renderIndex","outlet","index","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","items","_trackByFn","fn","console","warn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","viewQuery","CdkTable_Query","exportAs","ngContentSelectors","CdkTable_Template","String","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","ɵmod","ɵinj","factory","CdkTableModule_Factory","ngJitMode","declarations","exports","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","arguments","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","styles","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","imports","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","active","a","b","valueA","valueB","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","indexOf","_updateChangeSubscription","sortChange","_sort","initialized","pageChange","_paginator","page","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","paginator","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min","routes","path","redirectTo","ACCOUNT","MANAGEMENT","USERS","pathMatch","component","AccountManagementRoutingModule","forChild","AccountManagementModule","entryComponents","UserCreateUpdateComponent","userService","dialogRef","roleService","user","getRoles","result","roles","initForm","formGroup","username","firstName","lastName","dateOfBirth","description","valid","createUser","closeDialog","error","log","close","templateUrl","styleUrls","UserListComponent","dialog","displayedColumns","getAllUsers","getUsers","open","afterClosed","openCreateUserModal","AccountUserModel","RoleModel","RoleService","http","ROLES","GET_LIST","UserService","post","CREATE"],"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","file":"account-management-account-management-module-es5.js","sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule,\n        MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { NgModule } from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {UserListComponent} from './user-list/user-list.component';\nimport {RouterUrls} from '../../../shared/constants/RouterUrls';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: RouterUrls.ACCOUNT.MANAGEMENT.USERS,\n    pathMatch: 'full'\n  },\n  {\n    path: RouterUrls.ACCOUNT.MANAGEMENT.USERS,\n    component: UserListComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountManagementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserCreateUpdateComponent } from './user-create-update/user-create-update.component';\nimport {RouterModule} from \"@angular/router\";\nimport {AccountManagementRoutingModule} from \"./account-management-routing.module\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {UserService} from \"../../../shared/services/account/user.service\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {MatNativeDateModule} from \"@angular/material/core\";\nimport {RoleService} from \"../../../shared/services/account/role.service\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n@NgModule({\n  declarations: [\n    UserListComponent,\n    UserCreateUpdateComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    AccountManagementRoutingModule,\n    MatTableModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule\n  ],\n  providers: [\n    UserService,\n    RoleService,\n    MatDatepickerModule\n  ],\n  entryComponents: [\n    UserCreateUpdateComponent\n  ]\n})\nexport class AccountManagementModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {AccountUserModel} from \"../../../../shared/models/account/account-user.model\";\nimport {UserService} from \"../../../../shared/services/account/user.service\";\nimport {RoleService} from \"../../../../shared/services/account/role.service\";\nimport {RoleModel} from \"../../../../shared/models/account/role.model\";\n\n@Component({\n  selector: 'app-user-create-update',\n  templateUrl: './user-create-update.component.html',\n  styleUrls: ['./user-create-update.component.scss']\n})\nexport class UserCreateUpdateComponent implements OnInit {\n  formGroup: FormGroup;\n  roles: any[];\n  user: AccountUserModel = new AccountUserModel();\n\n  constructor(private userService: UserService,\n              public dialogRef: MatDialogRef<UserCreateUpdateComponent>,\n              public roleService: RoleService,\n              @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.getRoles();\n  }\n\n  getRoles() {\n    this.roleService.getRoles().subscribe(\n      result => {\n        this.roles = result;\n        this.initForm();\n      }\n    )\n  }\n\n  initForm() {\n    this.formGroup = new FormGroup({\n      username: new FormControl(''),\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      role: new FormControl(''),\n      dateOfBirth: new FormControl(''),\n      description: new FormControl(''),\n    })\n  }\n\n  createOrUpdateUser() {\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    const values = this.formGroup.value;\n    const role: RoleModel = new RoleModel();\n    role.id = values.role;\n\n    this.user.username = values.username;\n    this.user.firstName = values.firstName;\n    this.user.lastName = values.lastName;\n    this.user.dateOfBirth = values.dateOfBirth;\n    this.user.description = values.description;\n    this.user.role = role;\n\n    this.userService.createUser(this.user).subscribe(\n      result => {\n        this.closeDialog();\n      }, error => {\n        console.log(error);\n    }\n    )\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.user);\n  }\n\n}\n","<div class=\"form\" *ngIf=\"formGroup\">\n  <div class=\"title modal-title\">\n    <p>Create user</p>\n\n    <hr>\n  </div>\n\n  <form [formGroup]=\"formGroup\" class=\"form\">\n    <div class=\"form-input\">\n      <mat-form-field>\n        <mat-label>Username</mat-label>\n        <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Username\" />\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-input\">\n      <mat-form-field>\n        <mat-label>Emri</mat-label>\n        <input matInput type=\"text\" formControlName=\"firstName\" placeholder=\"First Name\" />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Mbiemri</mat-label>\n        <input matInput type=\"text\" formControlName=\"lastName\" placeholder=\"Last Name\" />\n      </mat-form-field>\n\n\n      <mat-form-field>\n        <mat-label>Roles</mat-label>\n        <mat-select formControlName=\"role\">\n          <mat-option *ngFor=\"let role of roles\" value=\"{{role.id}}\">{{role.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Data e Lindjes</mat-label>\n        <input matInput type=\"text\" formControlName=\"dateOfBirth\" placeholder=\"Data e Lindjes\"  [matDatepicker]=\"picker\" />\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Pershkrim i shkurter</mat-label>\n        <input matInput type=\"text\" formControlName=\"description\" placeholder=\"Pershkrim i shkurter\" />\n      </mat-form-field>\n    </div>\n\n\n    <div class=\"button buttons-plc\">\n      <button mat-raised-button (click)=\"closeDialog()\">Mbyll</button>\n      <button mat-raised-button (click)=\"createOrUpdateUser()\" color=\"primary\">Shto</button>\n    </div>\n  </form>\n</div>\n","import {ChangeDetectorRef, Component} from '@angular/core';\nimport {UserService} from \"../../../../shared/services/account/user.service\";\nimport {UserCreateUpdateComponent} from \"../user-create-update/user-create-update.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\n\nexport class UserListComponent {\n  displayedColumns: string[] = ['firstName', 'lastName', 'email', 'dateOfBirth', 'role'];\n  dataSource: any;\n\n  constructor(private userService: UserService,\n              private dialog: MatDialog\n  ) {\n    this.getAllUsers();\n  }\n\n  getAllUsers() {\n    this.userService.getUsers().subscribe(\n      result => {\n        this.dataSource = result;\n      }\n    )\n  }\n\n  openCreateUserModal() {\n    const dialogRef = this.dialog.open(UserCreateUpdateComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.getAllUsers();\n    });\n  }\n}\n","<div class=\"table\">\n  <div class=\"table-title-holder\">\n    <div class=\"table-title table-title__button\">\n      <div class=\"title\">\n        <p>Lista e Usere-ve</p>\n      </div>\n      <div class=\"button\">\n        <button (click)=\"openCreateUserModal()\" mat-raised-button color=\"accent\">Create User</button>\n      </div>\n    </div>\n    <table mat-table [dataSource]=\"dataSource\">\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"firstName\">\n        <th style=\"width: 20%\" mat-header-cell *matHeaderCellDef> Emri </th>\n        <td style=\"width: 20%\" mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"lastName\">\n        <th style=\"width: 20%\" mat-header-cell *matHeaderCellDef> Mbiemri </th>\n        <td style=\"width: 20%\" mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\n      </ng-container>\n\n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"email\">\n        <th style=\"width: 20%\" mat-header-cell *matHeaderCellDef> Emaili </th>\n        <td style=\"width: 20%\" mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"dateOfBirth\">\n        <th style=\"width: 20%\" mat-header-cell *matHeaderCellDef> Data e Lindjes </th>\n        <td style=\"width: 20%\" mat-cell *matCellDef=\"let element\"> {{element.dateOfBirth | date}} </td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"role\">\n        <th style=\"width: 20%\" mat-header-cell *matHeaderCellDef> Roli </th>\n        <td style=\"width: 20%\" mat-cell *matCellDef=\"let element\"> {{element.role?.name}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n\n</div>\n","import {BaseModel} from \"../base.model\";\nimport {RoleModel} from \"./role.model\";\n\nexport class AccountUserModel extends BaseModel {\n  username: string;\n  firstName: string;\n  lastName: string;\n  dateOfBirth: string;\n  description: string;\n  role: RoleModel;\n}\n","import {BaseModel} from \"../base.model\";\n\nexport class RoleModel extends BaseModel {\n  name: string;\n  description: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RequestUrls } from \"../../constants/RequestUrls\";\nimport { LoginModel } from \"../../models/auth/login.model\";\n\n@Injectable()\nexport class RoleService {\n\n  constructor(private http: HttpClient) { }\n\n  getRoles() {\n    return this.http.get<any>(RequestUrls.ACCOUNT.ROLES.GET_LIST);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RequestUrls } from \"../../constants/RequestUrls\";\nimport { LoginModel } from \"../../models/auth/login.model\";\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getUsers() {\n    return this.http.get<any>(RequestUrls.ACCOUNT.USERS.GET_LIST);\n  }\n\n  createUser(user: any) {\n    return this.http.post(RequestUrls.ACCOUNT.USERS.CREATE, user);\n  }\n}\n"]}