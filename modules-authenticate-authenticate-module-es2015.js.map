{"version":3,"sources":["./src/app/modules/authenticate/authenticate-routing.module.ts","./src/app/modules/authenticate/authenticate.component.ts","./src/app/modules/authenticate/authenticate.component.html","./src/app/modules/authenticate/authenticate.module.ts","./src/app/modules/authenticate/login/login.component.ts","./src/app/modules/authenticate/login/login.component.html","./src/app/shared/services/auth/authentication.service.ts"],"names":[],"mappings":"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","file":"modules-authenticate-authenticate-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {AuthenticateComponent} from \"./authenticate.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticateComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticateRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authenticate',\n  templateUrl: './authenticate.component.html',\n  styleUrls: ['./authenticate.component.scss'],\n})\nexport class AuthenticateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticateComponent } from './authenticate.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule } from \"@angular/router\";\nimport { AuthenticateRoutingModule } from \"./authenticate-routing.module\";\nimport { AuthenticationService } from \"../../shared/services/auth/authentication.service\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { TokenService } from \"../../shared/services/auth/token.service\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n@NgModule({\n  declarations: [AuthenticateComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    AuthenticateRoutingModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  providers: [\n    AuthenticationService,\n    TokenService\n  ]\n})\nexport class AuthenticateModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from '../../../shared/services/auth/authentication.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {LoginModel} from '../../../shared/models/auth/login.model';\nimport {TokenService} from '../../../shared/services/auth/token.service';\nimport {Router} from '@angular/router';\nimport {RouterUrls} from '../../../shared/constants/RouterUrls';\nimport {IMAGEURLS} from '../../../shared/constants/GeneralConstant';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n  logoUrl = IMAGEURLS.LOGO;\n\n  constructor(private authService: AuthenticationService,\n              private router: Router,\n              private tokenService: TokenService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.formGroup = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n    })\n  }\n\n  login() {\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const loginModel: LoginModel = {\n      username: this.formGroup.get('username').value,\n      password: this.formGroup.get('password').value,\n    };\n\n    this.authService.authenticate(loginModel).subscribe(result => {\n      this.tokenService.saveToken(result.token);\n      this.router.navigateByUrl('/' + RouterUrls.ACCOUNT.BASE_MODULE);\n    });\n  }\n\n}\n","<div class=\"login-form\">\n  <div class=\"form-wrap\">\n    <div class=\"img\">\n      <img src=\"{{logoUrl}}\" />\n    </div>\n    <form [formGroup]=\"formGroup\" (submit)=\"login()\">\n      <div class=\"form-input\">\n        <mat-form-field>\n          <mat-label>Email Adresa</mat-label>\n          <input matInput formControlName=\"username\" placeholder=\"Email Adresa\" value=\"Sushi\">\n        </mat-form-field>\n      </div>\n      <div class=\"form-input\">\n        <mat-form-field>\n          <mat-label>Fjalekalimi</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Fjalekalimi\" />\n        </mat-form-field>\n      </div>\n      <div class=\"button\">\n        <button mat-raised-button color=\"primary\">Kycu</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {RequestUrls} from \"../../constants/RequestUrls\";\nimport {LoginModel} from \"../../models/auth/login.model\";\n\n@Injectable()\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient) { }\n\n  authenticate(loginModel: LoginModel) {\n    return this.http.post<any>(RequestUrls.AUTHENTICATION.LOGIN, loginModel);\n  }\n}\n"],"sourceRoot":"webpack:///"}